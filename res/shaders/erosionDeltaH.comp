#version 430 core

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(std430, binding = 0) buffer buffer_heightmap { float heightmap[]; };
layout(std430, binding = 2) buffer buffer_waterIn { float waterIn[]; };
layout(std430, binding = 6) buffer buffer_totalDeltaHW { float totalDeltaHW[]; };
layout(std430, binding = 7) buffer buffer_totalDeltaH { float totalDeltaH[]; };

layout(location = 0) uniform int size;
layout(location = 1) uniform float kT;

const int dX[8] = { -1, +0, +1, -1, +1, -1, +0, +1 };
const int dZ[8] = { -1, -1, -1, +0, +0, +1, +1, +1 };

void main(){
    const uint cellIndex = gl_GlobalInvocationID.y * size + gl_GlobalInvocationID.x;
    // calculate and fill delta H buffer
    float tdh = 0.0;
    float tdhw = 0.0;
    for (int i = 0; i < 8; i++){
        const uint nCellIndex = (gl_GlobalInvocationID.y + dZ[i]) * size + gl_GlobalInvocationID.x + dX[i];
        const float deltaH = heightmap[cellIndex] - heightmap[nCellIndex];
        const float deltaHW = (heightmap[cellIndex] + waterIn[cellIndex]) - (heightmap[nCellIndex] + waterIn[nCellIndex]);

        if (deltaH > kT) {
            tdh += deltaH;
        }
        if (deltaHW > 0.0) {
            tdhw += deltaHW;
        }
    }
    totalDeltaH[cellIndex] = tdh;
    totalDeltaHW[cellIndex] = tdhw;
}
